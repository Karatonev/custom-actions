name: 'Get & Cache Dependencies' 
description: 'Get and cache Dependencies'
inputs:
    caching:
      description: 'Whether to cache dependencies or not.'
      required: true
      default: 'true'
outputs:
     compose-out:
       description: 'Some value'
       value: ${{ steps.install.outputs.cache_was_used}}
runs:
    using: 'composite'

    steps:
      
      - name: Cache dependencies
        if: inputs.caching=='true'
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install dependencies
        id: install
        if: steps.cache.outputs.cache-hit != 'true' || inputs.caching !='true'
        run: |
          npm ci
          echo "cache_was_used=${{ inputs.caching }}" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Build website
        run: npm run build
        shell: bash
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist